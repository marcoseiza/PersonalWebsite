---
export interface Props {
  url?: string;
  text?: string;
  forceWidth?: number;
  icon?: boolean;
  elevation?: 1 | 2 | 3;
  size?: "small" | "normal";
  className?: string;
}
const {
  url,
  text = "",
  forceWidth,
  icon = false,
  size = "normal",
  elevation = 2,
  className = "link",
} = Astro.props as Props;
---

<a href={url} class:list={[className]}>
  <div
    class:list={[
      icon && "icon",
      icon && text && "icontext",
      size,
      `elevation-${elevation}`,
    ]}
  >
    <slot />
    {text && <h4>{text}</h4>}
  </div>
</a>

<style define:vars={{ forceWidth: forceWidth ? `${forceWidth}px` : "auto" }}>
  a,
  a:link {
    text-decoration: none;
  }

  a div {
    --shadow: 3px;
    width: var(--forceWidth);
    background-color: var(--color-secondary);
    border: var(--border-width) solid var(--color-card-text);
    border-radius: 10px;
    box-shadow: var(--shadow) var(--shadow) 0px var(--color-card-text);
    margin: 0 var(--shadow) var(--shadow) 0;
    transition: all 100ms ease-in-out;
    text-align: center;
    display: flex;
    align-items: center;
    gap: 10px;
  }

  a div.elevation-1 {
    --shadow: 2px;
  }

  a div.elevation-2 {
    --shadow: 4px;
  }

  a div.elevation-3 {
    --shadow: 5px;
  }

  a div.normal {
    padding: 0.7em 1em;
  }

  a div.small {
    font-size: 0.85em;
    padding: 0 0.3em;
    gap: 0.2em;
  }

  a div.icon {
    flex-direction: row;
    align-items: center;
    justify-items: center;
    padding: 0.3em;
    gap: 0.3em;
  }

  a div.icontext {
    padding-right: 0.5em;
  }

  a:hover div {
    box-shadow: 1px 1px 0px var(--color-card-text);
    transform: translate(calc(var(--shadow) - 1px), calc(var(--shadow) - 1px));
    cursor: pointer;
  }

  a div h4 {
    color: var(--color-card-text);
  }
</style>
